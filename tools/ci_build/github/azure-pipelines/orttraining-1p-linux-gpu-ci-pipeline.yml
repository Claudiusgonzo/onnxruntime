parameters:
  - name: test_flag
    displayName: Test Flag
    type: string
    default: --enable_onnx_tests

stages:
- stage: Python_Packaging

  variables:
    actual_extra_build_py_parameters: >
      --enable_training
      --wheel_name_suffix training
    docker_image_prefix: onnxruntime-training
    linux_gpu_dockerfile: ../../../../../dockerfiles/Dockerfile.training
    python.version: 3.6
    BuildCommand: >
      tools/ci_build/github/linux/run_dockerbuild.sh
      -o ubuntu16.04 -d gpu -r $(Build.BinariesDirectory)
      -x "
      --enable_training
      --config $(buildConfig)
      --skip_onnx_tests
      --build_wheel
      --enable_nvtx_profile
      "
  jobs:
  - job: Linux_py_GPU_Wheels
    timeoutInMinutes: 0
    workspace:
      clean: all
    pool: Linux-GPU-CUDA10
    #pool: Linux-Multi-GPU-V100
    # strategy: 
    #   maxParallel: 2
    #   matrix:
    #     Debug:
    #       buildConfig: Debug
    #     Release:
    #       buildConfig: Release
    steps:
      - checkout: self
        clean: true
        submodules: recursive

      - template: templates/set-py-packaging-variables-step.yml

      # - task: CmdLine@2
      #   inputs:
      #     script: |
      #       docker build \
      #         --pull \
      #         -t ${{ variables.docker_image_prefix }}-manylinux-gpu-release \
      #         --build-arg TEST_FLAG="${{ parameters.test_flag }}" \
      #         -f ${{ variables.linux_gpu_dockerfile }} .
      #     workingDirectory: $(Build.SourcesDirectory)/tools/ci_build/github/linux/docker

      # - task: AzureKeyVault@1
      #   inputs:
      #     azureSubscription: 'AIInfraBuild'
      #     KeyVaultName: 'jingywatest'
      #     SecretsFilter: '*'
      #     RunAsPreJob: false

      # - task: CmdLine@2
      #   inputs:
      #     script: |
      #       echo $(DockerPassword) > password.txt
      #       cat password.txt | docker login --username jingywatest --password-stdin jingywatest.azurecr.io
      #       docker tag onnxruntime-ubuntu16.04-cuda10.1-cudnn7.6 jingywatest.azurecr.io/test/onnxruntime-training-1p:$(Build.BuildId)
      #       docker push jingywatest.azurecr.io/test/onnxruntime-training-1p:$(Build.BuildId)
      - task: Docker@2
        displayName: Login to ACR
        inputs:
          command: login
          containerRegistry: jingywatest
      
      - task: Docker@2
        displayName: Build
        inputs:
          command: build
          repository: test/onnxruntime-training-1p
          dockerfile: ${{ variables.linux_gpu_dockerfile }}
          tags: |
            $(Build.BuildId)
            latest
          arguments: --build-arg TEST_FLAG="${{ parameters.test_flag }}"

      - task: Docker@2
        displayName: Push
        inputs:
          command: push
          containerRegistry: jingywatest
          repository: test/onnxruntime-training-1p
          tags: |
            $(Build.BuildId)
            latest

      - template: templates/component-governance-component-detection-steps.yml

      - template: templates/clean-agent-build-directory-step.yml
